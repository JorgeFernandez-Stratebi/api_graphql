schema {
    query: Query
    mutation: Mutation
}

type Product {
    id_product: ID!
    name: String!
    standard_cost: Float
    list_price: Float
    product_line: String
}

type Manufacture {
    id_manufacture: ID!
    id_product: Int!
    real_cost: Float
    quantity: Int
}

type ProductResult {
    success: Boolean!
    errors: [String]
    product: Product
}

type ProductListResult {
    success: Boolean!
    errors: [String]
    product: [Product]
}

type ManufactureResult {
    success: Boolean!
    errors: [String]
    manufacture: Manufacture
}

type ManufactureListResult {
    success: Boolean!
    errors: [String]
    manufacture: [Manufacture]
}

type Query {
    getProduct(id_product: ID!): ProductResult!
    listProduct: ProductListResult!
    getManufacture(id_manufacture: ID!): ManufactureResult!
    listManufactures: ManufactureListResult!
}

type Mutation {
    createProduct(name: String!, standard_cost: Float!, list_price: Float!): ProductResult!
}